<?php
/**
 * @file
 * Code for the Feature AZ Antispam feature.
 */

include_once 'feature_az_antispam.features.inc';

/**
 * Implements hook_permission().
 * Define user permissions.
 */
function feature_az_antispam_permission() {
  return array(
   'az_antispam_perms' => array(
     'title' => t('Administer AZ Anti-spam Configuration'),
     'description' => t('Administer any configuration related to the AZ Anti-spam module/feature.'),
   ),
 );
}

/**
 * Implements hook_menu().
 * Define menu items and page callbacks.
 */
function feature_az_antispam_menu() {
   $items = array();
   $items['admin/config/people/az-antispam-settings'] = array(
       'title' => 'AZ Anti-spam Settings',
       'description' => 'Configure AZ Anti-spam settings',
       'page callback' => array('drupal_get_form'),
       'page arguments' => array('_form_az_antispam_settings'),
       'access arguments' => array('administer site configuration'),
       'file' => 'inc/az_antispam_settings.inc',
       'file path' => drupal_get_path('module', 'feature_az_antispam'),
       //'type' => MENU_NORMAL_ITEM,
   );
   return $items;
}

/**
 *Implements hook_boot
 *
 */
function feature_az_antispam_page_build(&$page) {
  //Set IP to check
  $path_saved = variable_get('path_get_ip', '');//This IS an array, as coded for multiple entries - iterate to check all values.
  $access_denied_page = variable_get('access_denied', '');
  //until this field is finalized:
  if (isset($path_saved[0])) {
    $path_to_check = "/" . $path_saved[0];
  } else {
    $path_to_check = '';
  }

  //testing multi_paths values
  $multi_paths = variable_get('multi_paths', 'contact, contact-us');
  $paths_array = explode(', ', $multi_paths);
  $user_country_code = '';
  $currentpath =  request_path();
  if(user_is_anonymous() && drupal_lookup_path('source', $currentpath)) {
    $currentpath = '/' . $currentpath;
    foreach ($paths_array as $key => $path_value) {
      $path_value = "/" . $path_value;
      //Call our IP check function
      if (($path_value == $currentpath)) {
        if (isset($_SERVER["HTTP_CF_IPCOUNTRY"])) {
          // If it exists, use it.
          $user_country_code = $_SERVER["HTTP_CF_IPCOUNTRY"];
          // dpm('cloudflare ip: ' . $_SERVER['REMOTE_ADDR'] );.
        }
        if ($user_country_code != 'US' && $user_country_code != '') {
          if (variable_get('save_watchdog', '') == 1) {
            _az_antispam_watchdog_foreign($user_country_code);
          }

          //Below will be called ANY time a protected path is accessed, so it will not reside in the check for foreign IP.
          if (variable_get('save_all_watchdog', '') == 1) {
            _az_antispam_watchdog_all($user_country_code);
          }

          //Email the admin
          //testing email - so this will ONLY be called if a user IP is detected as foreign.
          $admin_email = variable_get('admin_email', '');
          $notify = variable_get('notify_admin', '');
          //Check if the admin email isset or not null
          if ($admin_email != '' && $notify == 1) {
            _az_antispam_email_admin($admin_email, $user_country_code  );
          }

          $default_denied = variable_get('site_403', '');
          //Check if access denied page isset
          if ($access_denied_page != '') {
            _az_antispam_redirect($access_denied_page);
          } elseif ($default_denied != '') {
            watchdog('access denied', 'Feature AZ Anti Spam. Default 403.' . $default_denied, NULL, WATCHDOG_WARNING);
            //header('HTTP/1.0 403 Forbidden');
            drupal_goto($default_denied);

          } else {
            drupal_add_http_header('Status', '403 Forbidden');
            watchdog('access denied', 'Feature AZ Anti Spam.  No 403 page.', NULL, WATCHDOG_WARNING);
            drupal_goto('');
          }
        }
      }
    }
  }
}

function _az_antispam_redirect ($redirect_path) {
  drupal_goto("$redirect_path");
}

function _az_antispam_watchdog_foreign ($user_country_code) {
  //add watchdog entry for foreign ip detected
  watchdog('feature_az_antispam', 'An attempt to access a configured path from a foreign IP was detected.  Country code is @@user_country_code', array('@user_country_code' => $user_country_code), WATCHDOG_NOTICE, '');
}

function _az_antispam_watchdog_all ($user_country_code) {
  //add watchdog entry for every path hit, regardless of ip source
  watchdog('feature_az_antispam', 'An attempt to access a configured path was detected.  Country code is @user_country_code', array('@user_country_code' => $user_country_code), WATCHDOG_NOTICE, '');
}

function _az_antispam_email_admin ($email, $user_country_code = NULL) {
  $to = "$email"; // to e-mail address
  $from = "test@example.com"; // from e-mail address
  $site_email = variable_get('site_mail', '');
  $from = $site_email;
  $subject = "A protected path has been blocked from a foreign IP"; // subject of e-mail
  $body = "A protected path has been blocked from a foreign IP.  The user country code is $user_country_code ."; //it might be any variable from the form eg. $form_state['values']['your_field']



  //params is the array passed to hook_mail function
  $params = array(
      'subject' => $subject,
      'body' => $body,
      );

  drupal_mail('_az_antispam', 'information', $to, language_default(), $params, $from);
}

function _az_antispam_mail($key, &$message, $params) {
  switch ($key) {
    case 'information':
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
    break;
    }
}

function feature_az_antispam_mail_alter(&$message) {
  if ($message['module'] == 'webform' && strpos($message['to'], '.gov' )){
    $notice = '***Be Aware of Potential Phishing Attacks***

    WARNING: The following message contains information provided by an anonymous user through an online webform. The user who submitted the webform has not been validated and may be using the form to submit unsafe content. Please treat the below message with caution, avoid clicking links, downloading attachments, or replying with personal information. If you believe this is a phishing attempt, please report to your agency\'s information security team or mail.review@azdoa.gov. For more information on phishing attempts please visit: https://espac.az.gov/security-awareness-videos and search the videos for "Phishing."

    ';
    $body = $message['body'][0];
    $message['body'][0] = $notice . $body;
  }
}
